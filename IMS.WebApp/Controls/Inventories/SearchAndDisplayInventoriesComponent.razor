@inject IViewInventoriesByNameUseCase ViewInventoriesByNameUseCase


<SearchInventoryComponent
    OnSearchInventory="OnSearchInventor"></SearchInventoryComponent>
@if (_inventories.Count > 0)
{
    <div style="overflow:auto;max-height:300px;border:1px solid silver; padding-top:5px">
        <ul style="list-style-type:none">
            @foreach(var inv in _inventories)
            {
                <li @key=inv.InventoryId style="cursor:pointer"
                    @onclick="@(async ()=>{ await OnSelectInventory(inv);})">
                    @inv.InventoryName
                </li>
            }
        </ul>
    </div>
}

@code {
    private List<Inventory> _inventories = new List<Inventory>();

    [Parameter]
    public EventCallback<Inventory> OnInventorySelected { get; set; }

    private async Task OnSearchInventor(string searchTerm){
        _inventories = (await ViewInventoriesByNameUseCase.ExecuteAsync(searchTerm)).ToList();
    }



    private async Task OnSelectInventory(Inventory inventory)
    {
        _inventories.Clear();
        await OnInventorySelected.InvokeAsync(inventory);
    }
}
