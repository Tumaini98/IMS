@page "/addProduct"
@inject NavigationManager NavigationManager
@inject IAddProductUseCase AddProductUseCase
<h3>AddProduct</h3>
<br />
<EditForm Model="product" OnInvalidSubmit="SaveProduct">
    <DataAnnotationsValidator></DataAnnotationsValidator>
    <ValidationSummary></ValidationSummary>
    <div class="form-group">
        <label for="name"> Product Name</label>
        <InputText id="name" @bind-Value="product.ProductName"
                   class="form-control">
        </InputText>
    </div>
    <div class="form-group">
        <label for="quantity"> Product quantity</label>
        <InputNumber id="quantity" @bind-Value="product.Quantity"
                     class="form-control">
        </InputNumber>
    </div>
    <div class="form-group">
        <label for="price"> Product Price</label>
        <InputNumber id="price" @bind-Value="product.Price"
                     class="form-control">
        </InputNumber>
    </div>
    
        <div class="form-group">
        <label for="invs">Inventories </label>
        <SearchAndDisplayInventoriesComponent></SearchAndDisplayInventoriesComponent>
        </div>
    
    <br />
    <button type="submit" class="btn btn-primary"> Save</button>
    <button type="submit" class="btn btn-primary" @onclick="Cancel"> Cancel</button>

</EditForm>
@code {
    private Product product = new Product();

    private async Task SaveProduct()
    {
        await AddProductUseCase.ExecuteAsync(product);
        NavigationManager.NavigateTo("/products");

    }

    private void Cancel()
    {
        NavigationManager.NavigateTo("/products");
    }

}
